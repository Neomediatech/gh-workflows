name: Check via cron if a image needs to be updated

on:
  #schedule:
    # Esegui ogni giorno alle 04:00 UTC
  #  - cron: '0 4 * * *'
  workflow_dispatch:
  workflow_call:

jobs:
  generate-matrix:
    runs-on: [self-hosted]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Read file and generate JSON for matrix
        id: set-matrix
        run: |
          MATRIX_JSON="$(
          jq -R -s -c '
            split("\n") |
            map(
              select(. | test("^#") | not) |
              split(";") |
              {
                image_repo: (.[0] // "" | sub("^ *#? *|;.*$";"")),
                tags: (.[1] // "" | sub("^ *| *$";"") | sub("\\[|\\]";"") | split(",") | map(sub("^ *| *$";"")) | select(length > 0)),
                image_type: (.[2] // "" | sub("^ *| *$";"")),
                package: (.[3] // "" | sub("^ *| *$";""))
              }
            ) |
            {include: .}
          '  images-to-check.txt)"
          echo "matrix=${MATRIX_JSON}"
          echo "matrix=${MATRIX_JSON}" >> "$GITHUB_OUTPUT"

  update-check:
    runs-on: [self-hosted]
    needs: generate-matrix
    #strategy:
    #  matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Show & Set matrix value & vars
        id: check-update
        run: |
          echo "::notice:: The current value from the matrix is ${{ matrix.images }}"
