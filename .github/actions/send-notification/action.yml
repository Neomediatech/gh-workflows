# .github/actions/send-notification/action.yml
name: Notifica (via Apprise o altro) con report e cronologia

inputs:
  title:
    required: false
    type: string
    description: "Titolo del report"
    default: "gh notification"
  message:
    required: false
    type: string
    description: "Messaggio personalizzato da includere"
  report_file:
    required: false
    type: string
    default: "last-update-report.txt"
    description: "Nome del file da allegare alla notifica email"
  report-name:
    required: false
    type: string
    description: "Report filename"
  notify-cmd:
    required: true
    type: string
    description: "Command for notification"
  notify-up:
    required: true
    type: string
  notify-endpoint:
    required: true
    type: string
    description: "Endpoint for notification"
  notify-options:
    required: false
    type: string
    description: "Options for notify command"
    default: " "

outputs:
  image-res:
    description: "Result of the executed command"
    value: ${{ steps.main_logic.outputs.cmd-res }}
  update-needed:
    description: "Whether the derived-image needs updating (true/false/unknown)"
    value: ${{ steps.main_logic.outputs.update-needed }}
  base-img-pkg-ver:
    description: "Package versione taken from base image"
    value: ${{ steps.main_logic.outputs.base-img-pkg-ver }}

runs:
  using: "composite"
  steps:
    - name: Scarica report
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.report-name }}
        path: artifacts
      if: ${{ inputs.report-name }} != ""

    - name: Invia notifica email (con eventuale report allegato)
      shell: bash
      run: |
        BODY_CONTENT_FILE=$(mktemp)
        if [[ "${{ inputs.message }}" != "" ]]; then 
          echo "${{ inputs.message }}" > $BODY_CONTENT_FILE
        else
          echo "" > $BODY_CONTENT_FILE
        fi
        
        # attach all files
        ATTACHMENTS=""
        ARTIFACT_DIR="artifacts"
        DELETE="$BODY_CONTENT_FILE"
        if [[ -d "$ARTIFACT_DIR" ]]; then
          DELETE+=" $ARTIFACT_DIR"
          i=1
          for file in $ARTIFACT_DIR/*; do
            if [ -f "$file" ]; then
              ATTACHMENTS+=" -F attach$i=@$file"
              cat "$file" >> $BODY_CONTENT_FILE
              ((i++))
            fi
          done
        fi

        BODY_CONTENT="$(< $BODY_CONTENT_FILE)"
        ${{ inputs.notify-cmd }} --no-progress-meter --user "${{ inputs.notify-up }}" \
             -X POST ${{ inputs.notify-endpoint }} \
             ${{ inputs.notify-options }} \
             $ATTACHMENTS \
             -F "title=${{ inputs.title }}" \
             -F "body=$BODY_CONTENT"

        echo "rm -rf $DELETE"
        rm -rf $DELETE
